// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  lastName  String
  email     String   @unique
  password  String
  role      Role     @default(CASHIER)
  createdAt DateTime @default(now())
  orders    Order[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Decimal
  stock       Int         @default(0)
  createdAt   DateTime    @default(now())
  inventory   Inventory?
  orderItems  OrderItem[]
}

model Inventory {
  id         Int      @id @default(autoincrement())
  productId  Int      @unique
  quantity   Int      @default(0)
  lastUpdate DateTime @updatedAt
  product    Product  @relation(fields: [productId], references: [id])
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  totalPrice Decimal
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  subTotal  Decimal
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

enum Role {
  ADMIN
  CASHIER
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELED
}
